# define our application server
upstream puma {
  server unix:$APP_HOME/tmp/sockets/puma.sock fail_timeout=0;
}

server {
  # default - 如果请求的网址没有找到匹配的 sever 模式，就用这个 server
  # deferred - 在 Linux 上用，为了优化性能
  listen 80 default deferred;
  server_name dev.apiwoods.com;

  root   $APP_HOME/public;
  index  index.html;

  access_log $APP_HOME/log/nginx.access.log;
  error_log $APP_HOME/log/nginx.error.log;

  # 禁止诸如 .env .git 之类的文件或目录被访问
  location ~ /\. {
    deny all;
  }

  # 禁止访问 .rb .log 文件
  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  # serve static (compiled) assets directly if they exist (for rails production)
  # 这里其实是个正则表达式，
  # 匹处理类似网址： `domain.com/assets/aaaa.jpg` 这样的请求
  # 加上了 uploads
  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system|uploads)/ {
     # $uri : 地址栏里输入，abc.com/def/hig.html，则 $uri 为 `/def`
     # @rails : 在后面定义的 named location
     # 如果地址匹配进来，则先按 $uri 处理，若没有找到，则交给 @rails 处理
    try_files $uri @rails;

    # 关闭访问记录
    access_log off;
    # `gzip_static` ：设置为 `on` ，在处理压缩之前，先查找已经预压缩的文件（.gz）
    # 避免每次对同一个文件进行重复的压缩处理
    gzip_static on; # to serve pre-gzipped version

     # 对请求进行缓存，并设为最长失效日期
     # 这种做法已过时，放在这里是为了兼容性
     # 替代的做法就是下面的设置 `Cache-Control` 头
    expires max;
    # public 对每个用户有效; private 对当前用户有效
    add_header Cache-Control public;

    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  # send non-static file requests to the app server
  location / {
    try_files $uri @rails;
  }

  location @rails {
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    # 阻止 Nginx 做其它别的重定向请求
    proxy_redirect off;
    # 将所有不符合上面的 server_name 或 location 的请求全部发送到这里
    proxy_pass http://puma;
  }
}